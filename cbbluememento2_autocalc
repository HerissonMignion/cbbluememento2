#!/bin/bash



SCRIPT_PATH=$(realpath "$0");






help() {
	cat <<HELP;
SYNOPSIS

	$(basename "$0") <commande> [<option>]...

DESCRIPTION

	TODO

HELP
}


quit_because() {
	local code=$1;
	shift;
    >&2 echo "$@";
	exit "$code";
}



# first pass to separate combined options (-asdf becomes -a -s -d -f)
trailing_args=();
while (($#)); do
	arg=$1;
	shift;
	case "$arg" in
		(--?*)
			trailing_args+=("$arg");
			;;
		(--)
			trailing_args+=(--);
			break;
			;;
		(-?*)
			for letter in $(echo "${arg#-}" | grep -o .); do
				trailing_args+=("-$letter");
			done;
			;;
		(*)
			trailing_args+=("$arg");
			;;
	esac;
done;
set -- "${trailing_args[@]}" "$@";

trailing_args=();
while (($#)); do
	arg=$1;
	shift;
	case "$arg" in
		(-h|--help)
			help;
			exit 0;
			;;
		(--)
			break;
			;;
		(-*)
			>&2 echo "Unknown option: $arg";
			exit 1;
			;;
		(*)
			trailing_args+=("$arg");
			;;
	esac;
done;
set -- "${trailing_args[@]}" "$@";
unset arg letter;





reverse_list_to_ptr() {
	local -n ptr=$1;
	shift;
	# le restant des arguments est le contenu de la liste qu'il faut
	# inverser à l'intérieur de la variable qu'on a reçu en premier
	# argument.

	ptr=();
	while (($#)); do
		ptr=("$1" "${ptr[@]}");
		shift;
	done;
}


# pop_last_of_ptr() {
# 	local -n ptr=$1;

# 	set -- "${ptr[@]}";
# 	ptr=();
# 	while (($# > 1)); do
# 		ptr+=("$1");
# 		shift;
# 	done;
# }

pop_first_of_ptr() {
	local -n ptr=$1;
	local count=${2:-1};

	set -- "${ptr[@]}";
	shift "$count";
	ptr=("$@");
}

push_to_ptr() {
	local -n ptr=$1;
	local value=$2;

	ptr=("$value" "${ptr[@]}");
}





test_semaine_has_section() {
	local hfile=$1;
	local semaine_name=$2;
	local section_name=$3;
	shift 3;

	get_semaine "$hfile" "$semaine_name" | \
		grep -q "^\*\* $section_name";
	
}

get_semaine_section() {
	local hfile=$1;
	local semaine_name=$2;
	local section_name=$3;
	shift 3;

	{
		get_semaine "$hfile" "$semaine_name";
		echo;
		echo;
		echo "** xxxxxxxxxxx";
	} | grep -A 1000 "^\*\* $section_name" | \
		grep -B 1000 -m 2 "^\*" | \
		grep -v "^\*" | \
		grep . | \
		grep -v "^#";
}


get_semaine() {
	local hfile=$1;
	local semaine_name=$2;
	shift 2;

	{
		cat "$hfile";
		echo;
		echo;
		echo "* semaine 100000";
	} | grep -A 1000 -F "* semaine $semaine_name" | \
		grep -m 2 -B 1000 '^\* ' | \
		grep -v '^\* ';
}



compute_semaine_section() {
	local hfile=$1;
	local semaine_name=$2;
	local section_name=$3;
	shift 3;

    local section_text=$(get_semaine_section "$hfile" "$semaine_name" "$section_name");

	# sed <<<"$section_text" "s/^/;/";


	# local time_line_regex="- [0-9]?[0-9]:[0-5][0-9]\$";
	local time_line_regex="^ *- [0-9]?[0-9]:[0-5][0-9]\$";

	local times=(
		$(egrep <<<"$section_text" -- "$time_line_regex" | awk '{ print $2 }')
	);

    local start_time=${times[0]};
	pop_first_of_ptr times;

	local sub_args=(group -s "$start_time");

	local zone;
	for time in "${times[@]}"; do

		zone=$(
			grep <<<"$section_text" -B 1000 -- "^ *- $time" | \
			    tac | \
				egrep -m 2 -B 1000 -- "$time_line_regex" | \
				egrep -v "$time_line_regex" | \
				tac | \
				grep -m 1 "^ *- " | \
				awk '{ print $2; }'
			);
		# echo "====---- $zone";

		sub_args+=(-z "$zone" "$time");

	done;

    "$SCRIPT_PATH" "${sub_args[@]}";
	
}



command_autocalc() {
	# je donne beaucoup moins de soin à cette commande qu'aux autres
	# commandes.

	# WARNING: tout les "nom" de semaine DOIVENT êtres unique.

	# le fichier est organisé en premier par des semaines (lignes qui
	# commencent par "* semaine"). ENSUITE c'est séparé en section
	# (lignes qui commencent par "** ").

	(($# >= 1)) || quit_because 1 "You must provide a file.";
	
	local hfile=$1;
	shift;

	[ -f "$hfile" ] || \
		quit_because 1 "The file '$hfile' doesn't exist.";


	local semaine_names=(
		$(cat "$hfile" | grep "^\* semaine" | awk '{ print $3; }')
	);

	# echo "${semaine_names[@]}";


	for semaine in "${semaine_names[@]}"; do
		echo "==== $semaine";

		for section in special samedi dimanche lundi mardi mercredi jeudi vendredi; do

			test_semaine_has_section "$hfile" $semaine $section || continue;

			echo "==== ==== $section";

			if [ "$section" == special ]; then

				true;
				
			else
				
				# get_semaine_section "$hfile" $semaine $section;
				compute_semaine_section "$hfile" $semaine $section;

				echo;
				

			fi;
		done;
		
	done;
	
}




main() {

	true;
}



main "$@";





